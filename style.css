/* Base styles */
body {
    font-family: monospace;
    background-color: #000;
    color: #fff;
    margin: 0;
    padding: 20px;
    box-sizing: border-box;
}

input, button {
    background-color: #444;
    color: #fff;
    border: none;
    padding: 5px;
}

button {
    cursor: pointer;
}

/* Stats & Skills */
.stats, .skills {
    display: flex;
    justify-content: space-between;
    font-size: 18px;
}

.selected {
    background-color: #ff0; /* High-contrast yellow */
    color: black;
}

.highlight {
    border: 2px solid red;
}

.flashing {
    animation: flash 1s infinite;
}

@keyframes flash {
    0% {
        opacity: 1;
    }

    50% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

/* Three-column layout */
#game-container {
    display: flex;
    flex-direction: row;
    gap: 20px;
    height: calc(100vh - 40px); /* Adjusted for 20px top/bottom body padding */
    box-sizing: border-box;
}

/* Left column: Character Creator/Info */
#left-panel {
    /* width: 400px; REMOVED to allow content to define width */
    flex-shrink: 1; /* Allow shrinking if needed, default is 1. Set to 0 if it should never shrink from content size. */
    flex-basis: auto; /* Content will determine size. 'max-content' or 'min-content' could also be options. */
    min-width: 240px; /* Added to prevent excessive squishing */
    background-color: #222;
    color: #fff;
    padding: 10px;
    overflow-y: auto;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center;
}

#character-creator {
    text-align: center; /* Center text and inline-block children */
    /* Consider adding max-width or width: fit-content if needed */
}

/* Middle column: Map and Console */
#middle-panel {
    flex-grow: 1;
    display: flex;
    flex-direction: row;
    gap: 10px;
    box-sizing: border-box;
    position: relative;
}

#mapContainer {
    width: 60%; /* Map takes 60% of middle-panel */
    /* overflow-y: auto; from previous rule is fine */
    box-sizing: border-box;
    /* Existing mapContainer styles like background, font, etc., remain */
}

#combat-console-stack {
    width: 40%; /* Combat UI and Console stack takes remaining 40% */
    display: flex;
    flex-direction: column;
    gap: 10px; /* Space between combat UI and console */
    box-sizing: border-box;
    overflow-y: auto; /* If the stack itself becomes too tall */
}

#console-panel-container {
    /* width: 50%; Is no longer needed as it's part of a column stack */
    height: 50%; /* Takes 50% of the #combat-console-stack height */
    /* overflow-y: auto; from previous rule is fine, or can be on #console itself */
    box-sizing: border-box;
    display: flex; /* To make #console child fill height */
    flex-direction: column; /* To make #console child fill height */
}

#console {
    height: 100%; /* Make console take full height of its container */
    overflow-y: auto;
    background: #111;
    color: #0f0;
    padding: 5px;
    font-family: monospace;
    box-sizing: border-box; /* Added for consistency */
}

/* Right column: Game Controls */
#right-panel {
    width: 350px;
    flex-shrink: 0;
    background-color: #222;
    padding: 10px;
    overflow-y: auto;
    box-sizing: border-box;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 10px;
}

table, th, td {
    border: 1px solid #555;
}

th, td {
    padding: 4px;
    text-align: left;
}

.hidden {
    display: none;
}

/* Map container: let it size to your grid of spans + <br> */
#mapContainer {
    flex-grow: 1;
    position: relative;
    background-color: #000;
    font-family: 'Courier New', Courier, monospace;
    white-space: pre; /* respect spaces/newlines */
    line-height: 1em; /* one line per row */
    overflow: auto; /* scroll if too big */
    padding: 10px;
    box-sizing: border-box;
    cursor: default; /* Ensure default cursor for the map area */
}

/* Layers are stacked on top of each other */
.mapLayer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* clicks pass through */
}

/* Each tile is one character wide & high */
.tile {
    display: inline-block;
    width: 1ch; /* exactly one “0” width */
    height: 1em; /* exactly one line height */
    font-size: 1em;
    text-align: center;
    vertical-align: top;
    pointer-events: auto; /* if you want to click on tiles */
}

/* Face Creator Panel Styles */
#face-creator-panel {
    margin-top: 20px;
    padding-top: 10px;
    border-top: 1px solid #444;
}

    #face-creator-panel h3 {
        margin-bottom: 10px;
    }

    #face-creator-panel div {
        margin-bottom: 8px;
        display: flex;
        align-items: center;
    }

    #face-creator-panel label {
        min-width: 150px; /* Adjust as needed for alignment */
        display: inline-block;
    }

    #face-creator-panel input[type="range"] {
        flex-grow: 1;
        margin-left: 10px;
        margin-right: 5px;
    }

    #face-creator-panel select {
        margin-left: 10px;
        flex-grow: 1;
    }

    #face-creator-panel input[type="color"] {
        margin-left: 10px;
        padding: 0; /* Remove padding for color input */
        border: 1px solid #555; /* Add a little border */
        min-width: 50px; /* Ensure it's clickable */
    }


    #face-creator-panel span {
        min-width: 25px; /* Space for slider values */
        text-align: right;
        display: inline-block;
        margin-left: 5px;
    }

#asciiFacePreview {
    font-family: 'Courier New', Courier, monospace;
    white-space: pre;
    border: 1px solid #555;
    background-color: #1a1a1a;
    padding: 10px;
    margin-top: 5px;
    min-height: 120px;
    line-height: 1.1em;
    overflow-x: auto;
    letter-spacing: normal;
    font-stretch: normal;
}

/* Character Info Panel Face Preview */
#characterInfoFacePreview h3 {
    margin-bottom: 5px;
}

#charInfoAsciiFace {
    font-family: 'Courier New', Courier, monospace;
    white-space: pre;
    border: 1px solid #555;
    background-color: #1a1a1a;
    padding: 10px;
    margin-top: 5px;
    min-height: 120px;
    line-height: 1.1em;
    overflow-x: auto;
    letter-spacing: normal;
    font-stretch: normal;
}

    #asciiFacePreview span,
    #charInfoAsciiFace span {
        display: inline; /* Ensures characters flow together naturally like text */
        /* vertical-align: top; removed as it's less relevant for display:inline and might cause issues */
    }

/* Randomize Face Button */
#randomizeFaceButton {
    display: block; /* Make it take its own line */
    margin: 15px auto 10px auto; /* Center it and give some space */
    padding: 8px 15px;
    background-color: #555;
    border: 1px solid #777;
    color: #fff;
    cursor: pointer;
}

    #randomizeFaceButton:hover {
        background-color: #666;
    }

/* Preset Color Swatches Styling */
.preset-colors-container {
    display: flex;
    flex-wrap: wrap; /* Allow swatches to wrap to next line if many */
    gap: 4px; /* Space between swatches */
    margin-left: 10px; /* Align with other inputs if label pushes them */
    margin-top: 2px; /* Small space below the main color picker */
    flex-grow: 1; /* Allow it to take available space in the flex row */
    align-items: center;
}

button.preset-swatch { /* More specific selector */
    width: 20px;
    height: 20px;
    border: 1px solid #888; /* Slightly lighter border to see them */
    padding: 0; /* Remove default button padding */
    margin: 0; /* Remove default button margin */
    cursor: pointer;
    outline: none; /* Remove focus outline if desired, or style it */
    display: inline-block; /* Ensure they behave well in flex container */
    font-size: 0; /* Hide any potential text from button element itself */
    line-height: 0; /* Hide any potential text from button element itself */
}

    button.preset-swatch:hover {
        border-color: #ccc; /* Highlight border on hover */
        transform: scale(1.1); /* Slight zoom effect */
    }

/* Menu Color Coding */
.menu-character-creator {
    background-color: #332222; /* Dark reddish-brown */
}

.menu-game-controls {
    background-color: #223322; /* Dark greenish-blue */
}

.menu-inventory-skills { /* A general class for right-panel sections if needed, or be more specific */
    background-color: #222233; /* Dark bluish-purple */
}

#left-panel.menu-character-creator,
#right-panel.menu-game-controls,
#console-panel-container.menu-console { /* Added console specific styling */
    padding: 10px; /* Ensure padding is consistent */
    border: 1px solid #444; /* Add a subtle border to distinguish menus */
}

/* Specific styling for console panel if it needs a different color */
.menu-console {
    background-color: #1a1a2a; /* Darker blue for console area */
}

/* Styling for combatUIDiv, now part of #combat-console-stack */
#combatUIDiv {
    /* position: absolute; REMOVED */
    /* top, left, z-index REMOVED */
    /* width will be 100% of #combat-console-stack by default as a block in flex column */
    height: 50%; /* Takes 50% of the #combat-console-stack height */
    /* min-height: 200px; REMOVED for stricter 50/50 split */
    background-color: rgba(30, 30, 30, 0.95); /* Default background */
    padding: 10px; /* Slightly reduced padding */
    color: #fff;
    border: 1px solid #777;
    border-radius: 5px;
    overflow-y: auto; /* Scroll if content is taller than its 50% height */
    overflow-x: auto; /* Scroll if content is wider than its allocated space */
    box-sizing: border-box;
    white-space: normal;
    line-height: normal;
    font-family: monospace;
    /* margin-bottom: 10px; Added by #combat-console-stack gap */
}

    #combatUIDiv h4,
    #combatUIDiv p,
    #combatUIDiv label,
    #combatUIDiv select,
    #combatUIDiv button {
        font-family: monospace; /* Explicitly set for children, or a UI font */
        margin-bottom: 3px; /* Reduced spacing */
        font-size: 0.9em; /* Slightly smaller font size for combat elements */
    }

    #combatUIDiv select, #combatUIDiv button {
        margin-top: 3px; /* Reduced spacing */
        padding: 3px 5px; /* Smaller padding for buttons/selects */
    }

    #combatUIDiv #currentAttacker p, #combatUIDiv #currentAttacker span {
        color: #ffdddd; /* Lighter red for attacker text */
    }

    #combatUIDiv #currentAttacker {
        background-color: rgba(139, 0, 0, 0.3); /* DarkRed background for attacker section */
        padding: 5px;
        border-radius: 3px;
        margin-bottom: 5px;
    }

    #combatUIDiv #currentDefender p, #combatUIDiv #currentDefender span {
        color: #ddddff; /* Lighter blue for defender text */
    }

    #combatUIDiv #currentDefender {
        background-color: rgba(0, 0, 139, 0.3); /* DarkBlue background for defender section */
        padding: 5px;
        border-radius: 3px;
        margin-bottom: 5px;
    }

    /* Reduce size of specific result paragraphs */
    #combatUIDiv #attackRollResult,
    #combatUIDiv #defenseRollResult,
    #combatUIDiv #damageResult {
        font-size: 0.85em;
        margin: 2px 0;
    }

/* Tooltip styles */
.tooltip {
    position: fixed; /* Changed from absolute to fixed for positioning relative to viewport */
    background-color: #1a1a1a; /* Dark background */
    color: #f0f0f0; /* Light grey text */
    border: 1px solid #555; /* Slightly lighter border */
    padding: 8px;
    border-radius: 4px;
    font-size: 0.9em; /* Slightly smaller font */
    pointer-events: none; /* So it doesn't interfere with mouse events on the map */
    z-index: 1000; /* Ensure it's on top */
    white-space: pre-wrap; /* Allow text to wrap but preserve whitespace like newlines */
    max-width: 300px; /* Prevent it from becoming too wide */
    box-shadow: 0 2px 5px rgba(0,0,0,0.3); /* Subtle shadow for depth */
}

    .tooltip.hidden {
        display: none;
    }

/* Construction UI Specific Styles */
#constructionBuildableList li.cannot-build {
    color: #888; /* Gray out the text */
    font-style: italic; /* Optional: make it italic */
    /* pointer-events: none; /* Optional: if you want to make them unclickable, though click handler still exists */
    opacity: 0.6; /* Make it visually more distinct as grayed out */
}

    #constructionBuildableList li.cannot-build:hover {
        /* Optional: remove hover effect if it's normally there */
        /* background-color: transparent; */
        /* text-decoration: none; /* Remove underline if it's added by default on hover */
    }

/* Crafting UI: Style for unavailable recipes */
#craftingRecipeList li.recipe-unavailable {
    color: #888; /* Gray out the text - same as cannot-build */
    font-style: italic;
    opacity: 0.6; /* Consistent opacity for grayed-out items */
}

    #craftingRecipeList li.recipe-unavailable:hover {
        /* Optional: consistent hover behavior for unavailable items */
        /* background-color: transparent; */
    }


/* Requirement Styling (used by both Crafting and Construction detail views) */
.req-met {
    color: #4CAF50; /* Green */
    font-weight: bold;
}

.req-not-met {
    color: #F44336; /* Red */
    font-weight: bold;
}

/* Ensure list items in details panel are styled correctly if they use these classes directly */
/* These specific overrides might not be strictly necessary if .req-met and .req-not-met are applied directly to spans */
#detailConstructionSkill li span.req-met,
#detailConstructionSkill li span.req-not-met,
#detailConstructionComponents li span.req-met,
#detailConstructionComponents li span.req-not-met {
    /* font-weight: bold; /* Already added to the base .req-met/.req-not-met */
}

/* Crafting UI detail component list uses direct style.color, which is fine.
   If we wanted to switch it to classes, we would add:
   #detailRecipeComponents li span.req-met { color: #4CAF50; font-weight: bold; }
   #detailRecipeComponents li span.req-not-met { color: #F44336; font-weight: bold; }
   But current JS handles this with direct style.color, which is acceptable.
*/

/* Console Autocomplete Styles */
#gameConsole {
    position: relative;
}

#consoleInput {
    width: 100%;
    background-color: #111;
    color: white;
    border: 1px solid #444;
    padding: 5px;
    box-sizing: border-box;
    height: 28px;
}

#consoleSuggestions {
    display: none; /* Hidden by default */
    position: absolute;
    bottom: 28px; /* Position above the input */
    left: 0;
    right: 0;
    background: #222;
    border: 1px solid #444;
    border-bottom: none;
    max-height: 150px;
    overflow-y: auto;
    z-index: 100;
}

.suggestion-item {
    padding: 5px;
    cursor: pointer;
    border-bottom: 1px solid #444;
}

.suggestion-item.selected, .suggestion-item:hover {
    background-color: #444;
}
